FUNCTION "VENDORORDERREPORTCALCULATION"(
			im_programUUID NVARCHAR(36),
			im_vendor NVARCHAR(20),
			im_language NVARCHAR(2)
		)
       RETURNS TABLE (
       	PROGRAM_UUID NVARCHAR(36),
       	PROGRAM_ID NVARCHAR(40),
       	STATUS NVARCHAR(10),
       	VENDOR_ID NVARCHAR(20),
       	VENDOR_DESC NVARCHAR(100),
       	DEALER_CODE NVARCHAR(20),
       	DEALER_NAME NVARCHAR(100),
       	DEALER_CODE_S NVARCHAR(6),
       	CATEGORY_ID NVARCHAR(18),
       	CATEGORY_DESC NVARCHAR(100),
       	PART_NUM NVARCHAR(40),
       	PART_DESC NVARCHAR(100),
       	TIRESIZE NVARCHAR(40),
       	DETAIL NVARCHAR(255),
       	MMYYYY NVARCHAR(6),
       	ORDER_QTY DECIMAL(13,0),
       	SCHEDULE_DATE DATE,
       	DEL_METHOD NVARCHAR(20),
       	DEL_METHOD_NAME NVARCHAR(100),
       	SPECIAL_INSTRUCTION NVARCHAR(250),
       	DEL_LOCATION_ID NVARCHAR(10),
       	DEL_LOCATION_NAME NVARCHAR(100),
       	DEL_PHONE_NUMBER NVARCHAR(10),
       	DEL_ADDRESS1 NVARCHAR(50),
       	DEL_ADDRESS2 NVARCHAR(50),
       	DEL_CITY NVARCHAR(50), 
       	DEL_PROVINCE NVARCHAR(2), 
       	DEL_POSTAL_CODE NVARCHAR(6), 
       	B_STATUS NVARCHAR(2)
       	
       ) 
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
    --- the default language is english 
    DECLARE lv_lan 			NVARCHAR(2) default 'EN';

    if :im_language is not NULL AND :im_language = 'FR' then 
    	lv_lan = 'FR';
    end if;
	

	RETURN 
		select A.PROGRAM_UUID, F.PROGRAM_ID, F.STATUS, A.VENDOR_ID, A.VENDOR_DESC, A.DEALER_CODE, A.DEALER_NAME, A.DEALER_CODE_S, A.CATEGORY_ID, A.CATEGORY_DESC, A.PART_NUM, A.PART_DESC, A.TIRESIZE, A.DETAIL, 
		A.MMYYYY, C.ORDER_QTY, E.SCHEDULE_DATE, B.DEL_METHOD, B.DEL_METHOD_NAME, B.SPECIAL_INSTRUCTION, B.DEL_LOCATION_ID, B.DEL_LOCATION_NAME, B.DEL_PHONE_NUMBER, B.DEL_ADDRESS1, B.DEL_ADDRESS2, 
		B.DEL_CITY, B.DEL_PROVINCE, B.DEL_POSTAL_CODE, F.B_STATUS 
		from ( select * from "AVAILABLEDEALERBOOKINGPERIODCALCULATION"(:im_programUUID, :im_vendor, :im_language ) ) AS A 
		left join (select * from "DEALERBOOKINGVENDORDELIVERYCALCULATION"(:im_programUUID, :im_vendor, :im_language)) as B 
		on A.PROGRAM_UUID = B.PROGRAM_UUID AND  A.DEALER_CODE = B.DEALER_CODE AND A.VENDOR_ID = B.VENDOR_ID AND A.CATEGORY_ID = B.CATEGORY_ID
		left join "PROGRAMBOOKING_DEALER_BOOKING_PERIOD" as C on A.PROGRAM_UUID = C.PROGRAM_UUID AND  A.DEALER_CODE = C.DEALER_CODE AND A.VENDOR_ID = C.VENDOR_ID 
		AND A.CATEGORY_ID = C.CATEGORY_ID AND A.PART_NUM = C.PART_NUM AND A.MMYYYY = C.MMYYYY
		left join "PROGRAMBOOKING_DELIVERY_SCHEDULE_LINE" as E on A.PROGRAM_UUID = E.PROGRAM_UUID AND  A.DEALER_CODE = E.DEALER_CODE AND A.VENDOR_ID = E.VENDOR_ID 
		AND A.CATEGORY_ID = E.CATEGORY_ID AND A.MMYYYY = E.MMYYYY
		-- join (SELECT * FROM "PROGRAMSTATUSCALCULATION"(PLACEHOLDER."$$ProgramUid$$" => :im_programUUID))  as F on A.PROGRAM_UUID = F.PROGRAM_UUID AND A.DEALER_CODE = F.DEALER_CODE;
		join (SELECT * FROM "PROGRAMSTATUSCALCULATION"(PLACEHOLDER."$$PROGRAMUID$$" => :im_programUUID))  as F on A.PROGRAM_UUID = F.PROGRAM_UUID AND A.DEALER_CODE = F.DEALER_CODE;

END;