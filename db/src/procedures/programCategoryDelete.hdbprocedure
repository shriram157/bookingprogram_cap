PROCEDURE "PROCEDURES_PROGRAMCATEGORYDELETE" ( 
    IN im_details "PROGRAMADMIN_PROGRAMCATEGORYVIEW",
	OUT ex_error "PROCEDURES_TT_ERRORS"  ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN

/***************************** 
 Write your procedure logic 
 *****************************/
declare lv_program_uuid		string;
declare lv_category_id		string;
declare lv_object_key		string;
declare lv_department_id	string;
declare lv_brand_id 		string;
declare lv_valid			string;
declare lv_has_error 		boolean default false;
declare lv_parts_count 		int default 0;
declare lv_count	 		int default 0;
declare lv_del_method_count int default 0;
declare lv_pp_pur_count     int default 0;
declare lv_dealerbokoing_count int default 0;          

select OBJECT_KEY
     into lv_object_key
     from :im_details; 

if :lv_object_key = '' then
	ex_error = select 552 as http_status_code, 
               'BP001021 ' as error_message, 
                     'The Obejct key field can not be empty for the PROG_CATEGORY table' as detail from "DUMMY";
else
	select CATEGORY_ID, PROGRAM_UUID, "VALID" into lv_category_id, lv_program_uuid,lv_valid  from "PROGRAMADMIN_PROG_CATEGORY" where OBJECT_KEY = :lv_object_key;
	
	if :lv_valid = 'X' then
		select count(*) into lv_count from "PROGRAMADMIN_PROG_CATEGORY" where CATEGORY_ID = :lv_category_id AND PROGRAM_UUID = lv_program_uuid AND "VALID" = 'X';
		if :lv_count > 1 then 
			lv_valid := '';
		end if;
	end if;
	
	if :lv_valid = 'X' then 
	  select count(*) into lv_parts_count from "PROGRAMADMIN_PROG_PARTS" where CATEGORY_ID = :lv_category_id  AND PROGRAM_UUID = :lv_program_uuid;
	  if :lv_parts_count > 0 then 
		ex_error = select 556 as http_status_code, 
               'BP01022' as error_message, 
                     'The category has associated parts' as detail from "DUMMY";
    	lv_has_error = true;                 
	  end if;

	  select count(*) into lv_del_method_count from "PROGRAMADMIN_PROG_DEL_METHOD" where CATEGORY_ID = :lv_category_id  AND PROGRAM_UUID = :lv_program_uuid;
	  if :lv_del_method_count > 0 then 
		ex_error = select 556 as http_status_code, 
               'BP01023' as error_message, 
                     'The category has associated delivery methods' as detail from "DUMMY";
    	lv_has_error = true;                 
	  end if;

	  select count(*) into lv_pp_pur_count from "PROGRAMADMIN_PROG_PRIOR_PURCHASES" where CATEGORY_ID = :lv_category_id  AND PROGRAM_UUID = :lv_program_uuid;
	  if :lv_pp_pur_count > 0 then 
		ex_error = select 556 as http_status_code, 
               'BP01024' as error_message, 
                     'The category has associated prior purchases' as detail from "DUMMY";
    	lv_has_error = true;                 
	  end if;

	  select count(*) into lv_dealerbokoing_count from "PROGRAMBOOKING_DEALER_BOOKING_PERIOD" where CATEGORY_ID = :lv_category_id  AND PROGRAM_UUID = :lv_program_uuid;
	  if :lv_dealerbokoing_count > 0 then 
		ex_error = select 556 as http_status_code, 
               'BP01025' as error_message, 
                     'The category has associated dealer booking' as detail from "DUMMY";
    	lv_has_error = true;                 
	  end if;
	
	end if;

end if;


if :lv_has_error = false then
	delete from "CORE_OBJECT_MESSAGE"  where OBJECT_KEY = :lv_object_key ; 
	delete from "PROGRAMADMIN_PROG_CATEGORY"  where OBJECT_KEY = :lv_object_key ;  
end if;
END;
