PROCEDURE "PROCEDURES_PROGRAMDELIVERYLOCATIONCREATE" ( 
    IN im_details "PROGRAMADMIN_PROGRAMDELIVERYLOCATIONVIEW",
	OUT ex_error "PROCEDURES_TT_ERRORS"  ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN
USING SQLSCRIPT_STRING AS LIB;
/***************************** 
 Write your procedure logic 
 *****************************/

declare lv_object_key		string;
declare lv_program_uuid		string;
declare lv_valid	 		string;
declare lv_vendor_type		string;
declare lv_programid		string;
declare lv_department_id	string;
declare lv_brand_id 		string;
declare lv_vendor_id 		string;
declare lv_location_id 		string;
declare lv_location_desc	string;
declare lv_lang				string;
declare lv_lang_x			string;
declare lv_changed_by		string;

declare lv_address1 		string;
declare lv_address2			string;
declare lv_city				string;
declare lv_province			string;
declare lv_zip				string;
declare lv_phone			string;

declare lv_count			integer; 
declare lv_count_en			integer; 
declare lv_count_fr			integer; 

declare lv_count_er			integer default 0; 
declare lv_count_cat		integer default 0; 
declare lv_count_ven		integer default 0; 
declare lv_batch_mode 		string;
declare lv_duplicated		boolean default false; 
declare lv_updateDesc		boolean default false; 
declare lv_error_codes		string;
declare lv_errorCodeArray	NVARCHAR(8) ARRAY;
declare lv_errorCodesLen	integer default 0; 
declare lv_tempStr			string; 
DECLARE i           		INTEGER      = 1;

select "OBJECT_KEY","PROGRAM_UUID","VENDOR_ID","DEL_LOCATION_ID","LANG","DEL_LOCATION_NAME","VENDOR_TYPE","VALID","BATCH_MODE","ERROR_CODES","DEL_ADDRESS1","DEL_ADDRESS2","DEL_CITY","DEL_PROVINCE","DEL_POSTAL_CODE","DEL_PHONE_NUMBER","CHANGED_BY" 
     into lv_object_key,lv_program_uuid,lv_vendor_id,lv_location_id,lv_lang,lv_location_desc,lv_vendor_type,lv_valid,lv_batch_mode,lv_error_codes,lv_address1,lv_address2,lv_city,lv_province,lv_zip,lv_phone,lv_changed_by
     from :im_details; 

if :lv_program_uuid = '' then
  ex_error = select 552 as http_status_code, 
               'The Program UUID is empty' as error_message, 
                     'The program uuid field can not be my empty' as detail from "DUMMY";
else
  select count(*) into lv_count  from "PROGRAMADMIN_PROG_DEL_LOCATION" where OBJECT_KEY = :lv_object_key;
  if lv_count > 0 then
	lv_duplicated := true;
  end if; 
  
  select count(*) into lv_count from "PROGRAMADMIN_PROG_DEL_LOCATION" where PROGRAM_UUID = :lv_program_uuid AND VENDOR_ID = :lv_vendor_id AND DEL_LOCATION_ID = :lv_location_id;
  if lv_count > 0 then
	lv_duplicated := true;
  end if; 

  if lv_count > 0 then
	lv_duplicated := true;
  end if; 

  if :lv_batch_mode = 'X' then
  	if :lv_valid <> 'X' THEN 
      if :lv_error_codes is not NULL then 
	    lv_errorCodeArray := LIB:SPLIT_TO_ARRAY(:lv_error_codes,',');
        FOR i IN 1..CARDINALITY(:lv_errorCodeArray) DO
		  lv_tempStr := :lv_errorCodeArray[:i];
		  select count(*) into lv_count_er  from "CORE_OBJECT_MESSAGE" where OBJECT_KEY = lv_object_key AND ERROR_CODE = :lv_tempStr;
		  if :lv_count_er < 1 then
			insert into "CORE_OBJECT_MESSAGE" ("OBJECT_KEY","ERROR_CODE","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
	          values(lv_object_key,lv_tempStr,CURRENT_TIMESTAMP,lv_changed_by,CURRENT_TIMESTAMP,lv_changed_by);
		  end if;
		END FOR;		
	  end if;    	
	end if;

--  check the vendor 
	select count(*) into lv_count_ven from "PROGRAMADMIN_PROG_VENDOR" where PROGRAM_UUID = :lv_program_uuid AND VENDOR_ID = :lv_vendor_id;
    if :lv_count_ven < 1  then
	  insert into "CORE_OBJECT_MESSAGE" ("OBJECT_KEY","ERROR_CODE","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
	    values(lv_object_key,'BP01035',CURRENT_TIMESTAMP,lv_changed_by,CURRENT_TIMESTAMP,lv_changed_by);
	  --- the check is failed  
	  lv_valid := '';
	end if;

    insert into "PROGRAMADMIN_PROG_DEL_LOCATION" ("OBJECT_KEY","PROGRAM_UUID","VENDOR_ID","DEL_LOCATION_ID","DEL_PHONE_NUMBER","VENDOR_TYPE","VALID","ADDRESS_DEL_ADDRESS1", "ADDRESS_DEL_ADDRESS2","ADDRESS_DEL_CITY","ADDRESS_DEL_PROVINCE","ADDRESS_DEL_POSTAL_CODE","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
	  values(:lv_object_key,:lv_program_uuid,:lv_vendor_id,:lv_location_id,:lv_phone,:lv_vendor_type,:lv_valid,:lv_address1,:lv_address2,:lv_city,:lv_province,:lv_zip,CURRENT_TIMESTAMP,:lv_changed_by,CURRENT_TIMESTAMP,:lv_changed_by);

	if :lv_valid = 'X' then
	  	upsert "PROGRAMADMIN_DEL_LOC_NAME" ("OBJECT_KEY","LANGUAGE_KEY","DEL_LOCATION_NAME","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
        	values(:lv_object_key,'EN',:lv_location_desc,CURRENT_TIMESTAMP,:lv_changed_by,CURRENT_TIMESTAMP,:lv_changed_by);
	  	upsert "PROGRAMADMIN_DEL_LOC_NAME" ("OBJECT_KEY","LANGUAGE_KEY","DEL_LOCATION_NAME","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
        	values(:lv_object_key,'FR',:lv_location_desc,CURRENT_TIMESTAMP,:lv_changed_by,CURRENT_TIMESTAMP,:lv_changed_by);

	end if ;
 --   select count(*) into lv_count  from "PROGRAMADMIN_DEL_LOC_NAME" where LANGUAGE_KEY = 'EN' AND OBJECT_KEY = :lv_object_key;
	-- if :lv_count <= 0 then
	--   	insert into "PROGRAMADMIN_DEL_LOC_NAME" ("OBJECT_KEY","LANGUAGE_KEY","DEL_LOCATION_NAME","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
 --       	values(:lv_object_key,'EN',:lv_location_desc,CURRENT_TIMESTAMP,:lv_changed_by,CURRENT_TIMESTAMP,:lv_changed_by);
	--  end if;

 --   select count(*) into lv_count  from "PROGRAMADMIN_DEL_LOC_NAME" where LANGUAGE_KEY = 'FR' AND OBJECT_KEY = :lv_object_key;
	-- if :lv_count <= 0 then
	--   	insert into "PROGRAMADMIN_DEL_LOC_NAME" ("OBJECT_KEY","LANGUAGE_KEY","DEL_LOCATION_NAME","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
 --       	values(:lv_object_key,'FR',:lv_location_desc,CURRENT_TIMESTAMP,:lv_changed_by,CURRENT_TIMESTAMP,:lv_changed_by);
	--  end if;
	 
  else
	lv_lang := upper(:lv_lang);

	if :lv_duplicated = true then
		ex_error = select 551 as http_status_code, 
               'The Record already exist' as error_message, 
                     'The Record already exist, can not insert' as detail from "DUMMY";
	
	else 

	  lv_valid := 'X';
	  insert into "PROGRAMADMIN_PROG_DEL_LOCATION" ("OBJECT_KEY","PROGRAM_UUID","VENDOR_ID","DEL_LOCATION_ID","DEL_PHONE_NUMBER","VENDOR_TYPE","VALID","ADDRESS_DEL_ADDRESS1", "ADDRESS_DEL_ADDRESS2","ADDRESS_DEL_CITY","ADDRESS_DEL_PROVINCE","ADDRESS_DEL_POSTAL_CODE","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
	       values(:lv_object_key,:lv_program_uuid,:lv_vendor_id,:lv_location_id,:lv_phone,:lv_vendor_type,:lv_valid,:lv_address1,:lv_address2,:lv_city,:lv_province,:lv_zip,CURRENT_TIMESTAMP,:lv_changed_by,CURRENT_TIMESTAMP,:lv_changed_by);

	  select count(*) into lv_count  from "PROGRAMADMIN_DEL_LOC_NAME" where LANGUAGE_KEY = :lv_lang AND OBJECT_KEY = :lv_object_key;

	  if :lv_count <= 0 then
	   	insert into "PROGRAMADMIN_DEL_LOC_NAME" ("OBJECT_KEY","LANGUAGE_KEY","DEL_LOCATION_NAME","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
        	 values(:lv_object_key,:lv_lang,:lv_location_desc,CURRENT_TIMESTAMP,:lv_changed_by,CURRENT_TIMESTAMP,:lv_changed_by);
      else       
	   	update "PROGRAMADMIN_DEL_LOC_NAME" set DEL_LOCATION_NAME= :lv_location_desc, 
	    		"AUDIT_CHANGED_ON" = CURRENT_TIMESTAMP,
				"AUDIT_CHANGED_BY" = :lv_changed_by
			where "OBJECT_KEY" = :lv_object_key AND LANGUAGE_KEY = :lv_lang;
	  end if;
	
	  if :lv_lang ='EN' then 
	 	lv_lang_x := 'FR';
	  else 
		lv_lang_x := 'EN';
	  end if;	

	  select count(*) into lv_count  from "PROGRAMADMIN_DEL_LOC_NAME" where LANGUAGE_KEY = :lv_lang_X AND OBJECT_KEY = :lv_object_key;
	  if :lv_count <= 0 then
	   	insert into "PROGRAMADMIN_DEL_LOC_NAME" ("OBJECT_KEY","LANGUAGE_KEY","DEL_LOCATION_NAME","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
        	values(:lv_object_key,:lv_lang_x,:lv_location_desc,CURRENT_TIMESTAMP,:lv_changed_by,CURRENT_TIMESTAMP,:lv_changed_by);
	  end if;
	
	end if;
      
  end if;

end if;

END;
