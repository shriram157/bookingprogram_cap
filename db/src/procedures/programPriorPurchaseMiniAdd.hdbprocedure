PROCEDURE "PROCEDURES_PROGRAMPRIORPURCHASEMINIADD" ( 
    IN im_program_uuid NVARCHAR(36),
    IN im_dealerId     NVARCHAR(20),
    IN im_dealerCode   NVARCHAR(6),
    IN im_en_desc      NVARCHAR(100), -- dealer name -en
    IN im_fr_desc      NVARCHAR(100), -- dealer name -fr
    IN im_partId	   NVARCHAR(40),	
    IN im_purchase	   DECIMAL(13,0),	
    IN im_errors       NVARCHAR(100),
    IN im_user         NVARCHAR(36),
    IN im_invalid 	   BOOLEAN,
	OUT ex_code       INT   ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN
USING SQLSCRIPT_STRING AS LIB;
/***************************** 
 Write your procedure logic 
 *****************************/
declare lv_count_pg			integer default 0; 
declare lv_count			integer default 0; 
declare lv_count_part		integer default 0;
declare lv_object_key 		string; 
declare lv_duplicated		boolean default false;
declare lv_valid	 		string;
declare lv_dealer_id 		string;

declare lv_errorCodeArray	NVARCHAR(8) ARRAY;
declare lv_errorCodesLen	integer default 0; 
declare lv_tempStr			string; 
DECLARE i           		INTEGER      = 1;
DECLARE rc_code        		INTEGER      = 0;

--- check the prorgam is existing, otherwise do nothing 
if  :im_program_uuid is not null then
  select count(*) into lv_count_pg from "PROGRAMADMIN_BOOKING_PROGRAM" where PROGRAM_UUID = :im_program_uuid;
end if;

--- only do if the program is exist 
if lv_count_pg > 0 then 
  --- first, get the uuid
  select to_nvarchar(SYSUUID) into lv_object_key from "DUMMY";

  --- get the error codes
  --if :im_invalid = true then 
  lv_valid := 'X';
  if :im_errors is not NULL   then 
    lv_errorCodeArray := LIB:SPLIT_TO_ARRAY(:im_errors,',');
	if CARDINALITY(:lv_errorCodeArray) > 0  then
      FOR i IN 1..CARDINALITY(:lv_errorCodeArray) DO
        lv_tempStr := :lv_errorCodeArray[:i];
		if :i = 1 AND LENGTH(:lv_tempStr) > 0 then 
	      lv_valid := '';
		end if;
	    if :lv_tempStr = 'BP01073' then 
			lv_duplicated := true;
        end if;
      
        --- as the uuid should be unique all the way, but all way using the upsert for possible duplication

	    upsert "CORE_OBJECT_MESSAGE" ("OBJECT_KEY","ERROR_CODE","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
	      values(lv_object_key,lv_tempStr,CURRENT_TIMESTAMP,im_user,CURRENT_TIMESTAMP,im_user) where OBJECT_KEY = :lv_object_key AND ERROR_CODE = :lv_tempStr;

      END FOR;	
      
	end if;
  end if;	

--  check the part is exist or not. part is invalid
  select count(*) into lv_count_part from "PROGRAMADMIN_PROG_PARTS" where PROGRAM_UUID = :im_program_uuid AND PART_NUM = :im_partId  AND "VALID" = 'X';
  if :lv_count_part < 1  then
    insert into "CORE_OBJECT_MESSAGE" ("OBJECT_KEY","ERROR_CODE","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
	  values(lv_object_key,'BP01045',CURRENT_TIMESTAMP,im_user,CURRENT_TIMESTAMP,im_user);
	  --- the check is failed  
	lv_valid := '';
  end if;

  if :im_dealerId is NULL OR :im_dealerId = '' then
      lv_dealer_id := :im_dealerCode;
  else     
	  lv_dealer_id := :im_dealerId;
  end if;
  
  if :lv_dealer_id is NULL then 
	lv_dealer_id := ' ';
  end if ;

  insert into "PROGRAMADMIN_PROG_PRIOR_PURCHASES" ("OBJECT_KEY","PROGRAM_UUID","DEALER_CODE","PART_NUM","PRIOR_PURCHASES","VALID","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
	  values(lv_object_key,im_program_uuid,lv_dealer_id,im_partId,im_purchase,lv_valid,CURRENT_TIMESTAMP,im_user,CURRENT_TIMESTAMP,im_user);	

  if :lv_valid = 'X' AND :lv_duplicated = false then 
    upsert "PROGRAMADMIN_DEALER_INFO" ("DEALER_CODE","DEALER_CODE_S","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
      values(lv_dealer_id,im_dealerCode,CURRENT_TIMESTAMP,im_user,CURRENT_TIMESTAMP,im_user) where DEALER_CODE = :lv_dealer_id;

    upsert "PROGRAMADMIN_VENDOR_NAME" ("VENDOR_ID","LANGUAGE_KEY","VENDOR_DESC","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
      values(lv_dealer_id,'EN',im_en_desc,CURRENT_TIMESTAMP,im_user,CURRENT_TIMESTAMP,im_user) where VENDOR_ID = :lv_dealer_id AND LANGUAGE_KEY = 'EN';

    upsert "PROGRAMADMIN_VENDOR_NAME" ("VENDOR_ID","LANGUAGE_KEY","VENDOR_DESC","AUDIT_CREATED_ON","AUDIT_CREATED_BY","AUDIT_CHANGED_ON","AUDIT_CHANGED_BY")
      values(lv_dealer_id,'FR',im_fr_desc,CURRENT_TIMESTAMP,im_user,CURRENT_TIMESTAMP,im_user) where VENDOR_ID = :lv_dealer_id AND LANGUAGE_KEY = 'FR';
	
  end if;

end if; 

ex_code := 0;

END;
